version: '3.1'
services:

  app:
    container_name: ${PROJECT_NAME}-app
    platform: ${PLATFORM}
    extends:
      file: ./shared/dockerfiles/templates/service.yml
      service: apache
    depends_on:
      - mysql
    ports:
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:443
    build:
      args:
        service: frontend
        PROJECT_NAME: ${PROJECT_NAME}
        VIRTUAL_HOST: ${VIRTUAL_HOST}
        PHP_VERSION: ${PHP_VERSION}
        PATH_SERVICES: ${PATH_SERVICES}
        PATH_WORKDIR: ${PATH_WORKDIR}
        PATH_SERVER_ROOT: ${PATH_SERVER_ROOT}
    volumes:
      - "${PATH_SERVICES}/frontend:/var/www/frontend:rw"
      - "${PROJECT_ROOT}:${PATH_WORKDIR}:rw"
    working_dir: ${PATH_WORKDIR}
    command: >
      bash -c "./script/build-project.sh && /usr/sbin/apache2ctl -D FOREGROUND"

  mysql:
    image: mysql:5.7
    container_name: ${PROJECT_NAME}-mysql
    platform: ${PLATFORM}
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${PROJECT_NAME}-de
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: ${PLATFORM}
    container_name: ${PROJECT_NAME}-phpmyadmin
    ports:
      - ${PHPMA_PORT}:80
    links:
      - mysql
    depends_on:
      - mysql
    environment:
      MYSQL_USERNAME: root
      MYSQL_ROOT_PASSWORD: root
      PMA_HOST: mysql

  mongo:
    image: mongo
    container_name: ${PROJECT_NAME}-mongo
    restart: always
    ports:
      - ${MONGODB_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    image: mongo-express
    container_name: ${PROJECT_NAME}-mexp
    restart: always
    ports:
      - ${MONGODB_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/

  elasticsearch:
    image: elasticsearch:7.9.3
    container_name: ${PROJECT_NAME}-elastic
    restart: always
    ports:
      - ${ELASTIC_PORT}:9200
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # 512mo HEAP
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    container_name: ${PROJECT_NAME}-kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - ${KIBANA_PORT}:5601

  maildev:
    image: djfarrelly/maildev
    container_name: ${PROJECT_NAME}-maildev
    ports:
      - ${MAILDEV_PORT}:80

volumes:
  mysql_data:
  mongo_data:
  rabbit:
    driver: local
  apache-logs:
    driver_opts:
      type: none
      device: ./apache-logs/
      o: bind
  esdata01:
    driver: local

networks:
  rabbitmq_go_net:
    driver: bridge
